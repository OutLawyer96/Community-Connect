version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - DATABASE_URL=postgres://postgres:postgres@db:5432/community_connect
      - REDIS_URL=redis://cache:6379/0
      - DEBUG=1
    volumes:
      - .:/app
      - media-data:/app/media
    depends_on:
      - db
      - cache
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
      args:
        - REACT_APP_API_URL=http://localhost:8000
    ports:
      - "3000:80"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgis/postgis:15-3.3
    environment:
      - POSTGRES_DB=community_connect
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    depends_on:
      - db

  worker:
    build:
      context: .
      dockerfile: Dockerfile.backend
    command: python manage.py run_huey
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings
      - DATABASE_URL=postgres://postgres:postgres@db:5432/community_connect
      - REDIS_URL=redis://cache:6379/0
    depends_on:
      - backend
      - db
      - cache
    volumes:
      - .:/app

volumes:
  postgres-data:
  redis-data:
  media-data: