# Generated by Django 5.0.1 on 2025-09-28 19:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0015_add_recommendation_system'),
    ]

    operations = [
        migrations.CreateModel(
            name='PurchaseVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_date', models.DateTimeField()),
                ('transaction_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('verification_method', models.CharField(max_length=50)),
                ('verification_details', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_valid', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-transaction_date'],
            },
        ),
        migrations.CreateModel(
            name='ReviewReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(choices=[('spam', 'Spam or Advertising'), ('offensive', 'Offensive Content'), ('irrelevant', 'Irrelevant Content'), ('fake', 'Suspected Fake Review'), ('conflict', 'Conflict of Interest'), ('other', 'Other')], max_length=20)),
                ('details', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.RenameIndex(
            model_name='abtestvariant',
            new_name='api_abtestv_user_id_e8dfe4_idx',
            old_name='api_abtestva_user_id_3a9b8c_idx',
        ),
        migrations.RenameIndex(
            model_name='abtestvariant',
            new_name='api_abtestv_experim_bc4f4e_idx',
            old_name='api_abtestva_experim_5d7e2f_idx',
        ),
        migrations.RenameIndex(
            model_name='userbehavior',
            new_name='api_userbeh_user_id_028b40_idx',
            old_name='api_userbeha_user_id_5a7a5d_idx',
        ),
        migrations.RenameIndex(
            model_name='userbehavior',
            new_name='api_userbeh_created_4ddcee_idx',
            old_name='api_userbeha_created_5f2c8a_idx',
        ),
        migrations.RenameIndex(
            model_name='userbehavior',
            new_name='api_userbeh_provide_dca7ae_idx',
            old_name='api_userbeha_provide_7b4c91_idx',
        ),
        migrations.RenameIndex(
            model_name='userbehavior',
            new_name='api_userbeh_session_f6fba4_idx',
            old_name='api_userbeha_session_8d3e2f_idx',
        ),
        migrations.RenameIndex(
            model_name='userrecommendation',
            new_name='api_userrec_user_id_80f46e_idx',
            old_name='api_userreco_user_id_4f8a9b_idx',
        ),
        migrations.RenameIndex(
            model_name='userrecommendation',
            new_name='api_userrec_expires_24e999_idx',
            old_name='api_userreco_expires_2c5d7e_idx',
        ),
        migrations.RenameIndex(
            model_name='userrecommendation',
            new_name='api_userrec_algorit_517adf_idx',
            old_name='api_userreco_algorit_1e6f8a_idx',
        ),
        migrations.AddField(
            model_name='review',
            name='moderated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='review',
            name='moderated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='moderation_notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='review',
            name='purchase_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='review',
            name='reported_count',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='review',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('flagged', 'Flagged for Review')], default='pending', max_length=20),
        ),
        migrations.AddField(
            model_name='purchaseverification',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_verifications', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='purchaseverification',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_verifications', to='api.provider'),
        ),
        migrations.AddField(
            model_name='purchaseverification',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_purchases', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='purchase_verification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviews', to='api.purchaseverification'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['status'], name='api_review_status_238803_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['reported_count'], name='api_review_reporte_8208b8_idx'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['purchase_verified'], name='api_review_purchas_06df07_idx'),
        ),
        migrations.AddField(
            model_name='reviewreport',
            name='reporter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reviewreport',
            name='resolved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='reviewreport',
            name='review',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='api.review'),
        ),
        migrations.AddIndex(
            model_name='purchaseverification',
            index=models.Index(fields=['provider', 'customer', '-transaction_date'], name='api_purchas_provide_5864a8_idx'),
        ),
        migrations.AddIndex(
            model_name='purchaseverification',
            index=models.Index(fields=['is_valid'], name='api_purchas_is_vali_37b29f_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewreport',
            index=models.Index(fields=['resolved'], name='api_reviewr_resolve_5071f0_idx'),
        ),
        migrations.AddIndex(
            model_name='reviewreport',
            index=models.Index(fields=['reason'], name='api_reviewr_reason_951452_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reviewreport',
            unique_together={('review', 'reporter')},
        ),
    ]
