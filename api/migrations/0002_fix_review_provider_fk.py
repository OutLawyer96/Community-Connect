# Generated by GitHub Copilot to fix incorrect FK on Review.provider_id referencing api_provider.user_id
from django.db import migrations

SQL_CREATE_TMP = """
CREATE TABLE IF NOT EXISTS api_review_tmp (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    rating smallint NOT NULL,
    comment TEXT NULL,
    created_at datetime NOT NULL,
    updated_at datetime NOT NULL,
    is_verified bool NOT NULL,
    user_id bigint NOT NULL REFERENCES api_user(id) ON DELETE CASCADE,
    provider_id bigint NOT NULL REFERENCES api_provider(id) ON DELETE CASCADE,
    CONSTRAINT api_review_user_provider_uniq UNIQUE (user_id, provider_id)
);
"""

# Copy data, translating old provider_id (pointing to provider.user_id) to provider.id
SQL_COPY_DATA = """
INSERT INTO api_review_tmp (id, rating, comment, created_at, updated_at, is_verified, user_id, provider_id)
SELECT r.id, r.rating, r.comment, r.created_at, r.updated_at, r.is_verified, r.user_id, p.id AS provider_id
FROM api_review r
JOIN api_provider p ON p.user_id = r.provider_id;
"""

SQL_DROP_OLD = "DROP TABLE api_review;"
SQL_RENAME = "ALTER TABLE api_review_tmp RENAME TO api_review;"

SQL_CREATE_INDEXES = [
    # Django usually creates implicit indexes; recreate uniqueness is already included
]

class Migration(migrations.Migration):
    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.RunSQL(
            sql=SQL_CREATE_TMP,
            reverse_sql="DROP TABLE IF EXISTS api_review_tmp;",
        ),
        migrations.RunSQL(
            sql=SQL_COPY_DATA,
            reverse_sql="DELETE FROM api_review_tmp;",
        ),
        migrations.RunSQL(
            sql=SQL_DROP_OLD,
            reverse_sql="""
CREATE TABLE api_review (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    rating smallint NOT NULL,
    comment TEXT NULL,
    created_at datetime NOT NULL,
    updated_at datetime NOT NULL,
    is_verified bool NOT NULL,
    user_id bigint NOT NULL REFERENCES api_user(id) ON DELETE CASCADE,
    provider_id bigint NOT NULL REFERENCES api_provider(user_id) ON DELETE CASCADE,
    CONSTRAINT api_review_user_provider_uniq UNIQUE (user_id, provider_id)
);
""",
        ),
        migrations.RunSQL(
            sql=SQL_RENAME,
            reverse_sql="DROP TABLE api_review;",
        ),
    ]
